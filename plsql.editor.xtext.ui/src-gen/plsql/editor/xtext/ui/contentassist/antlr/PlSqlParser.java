/*
* generated by Xtext
*/
package plsql.editor.xtext.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import plsql.editor.xtext.services.PlSqlGrammarAccess;

public class PlSqlParser extends AbstractContentAssistParser {
	
	@Inject
	private PlSqlGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected plsql.editor.xtext.ui.contentassist.antlr.internal.InternalPlSqlParser createParser() {
		plsql.editor.xtext.ui.contentassist.antlr.internal.InternalPlSqlParser result = new plsql.editor.xtext.ui.contentassist.antlr.internal.InternalPlSqlParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getCompilationUnitAccess().getAlternatives(), "rule__CompilationUnit__Alternatives");
					put(grammarAccess.getProcedureAccess().getAlternatives_5(), "rule__Procedure__Alternatives_5");
					put(grammarAccess.getPackageAccess().getAlternatives_4(), "rule__Package__Alternatives_4");
					put(grammarAccess.getProcedureDefinitionAccess().getAlternatives_3(), "rule__ProcedureDefinition__Alternatives_3");
					put(grammarAccess.getFunctionAccess().getAlternatives_7(), "rule__Function__Alternatives_7");
					put(grammarAccess.getParameterValueAccess().getAlternatives_0(), "rule__ParameterValue__Alternatives_0");
					put(grammarAccess.getParameterBehaviorAccess().getAlternatives(), "rule__ParameterBehavior__Alternatives");
					put(grammarAccess.getPragmaAccess().getAlternatives(), "rule__Pragma__Alternatives");
					put(grammarAccess.getPragmaRestrictReferencesAccess().getAlternatives_3(), "rule__PragmaRestrictReferences__Alternatives_3");
					put(grammarAccess.getPragmaRestrictReferencesRestrictionAccess().getAlternatives(), "rule__PragmaRestrictReferencesRestriction__Alternatives");
					put(grammarAccess.getDataTypeAccess().getAlternatives(), "rule__DataType__Alternatives");
					put(grammarAccess.getProcedureContentAccess().getAlternatives(), "rule__ProcedureContent__Alternatives");
					put(grammarAccess.getFunctionClauseAccess().getAlternatives(), "rule__FunctionClause__Alternatives");
					put(grammarAccess.getItemAccess().getAlternatives(), "rule__Item__Alternatives");
					put(grammarAccess.getVariableValueAccess().getAlternatives_0(), "rule__VariableValue__Alternatives_0");
					put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
					put(grammarAccess.getBooleanLiteralExpressionAccess().getValueAlternatives_0(), "rule__BooleanLiteralExpression__ValueAlternatives_0");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getFetchStatementIntoClauseAccess().getAlternatives(), "rule__FetchStatementIntoClause__Alternatives");
					put(grammarAccess.getLoopStatementAccess().getAlternatives(), "rule__LoopStatement__Alternatives");
					put(grammarAccess.getNameDeclarationAccess().getAlternatives(), "rule__NameDeclaration__Alternatives");
					put(grammarAccess.getInvokerRightAccess().getAlternatives(), "rule__InvokerRight__Alternatives");
					put(grammarAccess.getProcedureAccess().getGroup(), "rule__Procedure__Group__0");
					put(grammarAccess.getProcedureAccess().getGroup_1(), "rule__Procedure__Group_1__0");
					put(grammarAccess.getProcedureAccess().getGroup_3(), "rule__Procedure__Group_3__0");
					put(grammarAccess.getPackageAccess().getGroup(), "rule__Package__Group__0");
					put(grammarAccess.getPackageAccess().getGroup_1(), "rule__Package__Group_1__0");
					put(grammarAccess.getProcedureDeclarationAccess().getGroup(), "rule__ProcedureDeclaration__Group__0");
					put(grammarAccess.getProcedureDeclarationAccess().getGroup_2(), "rule__ProcedureDeclaration__Group_2__0");
					put(grammarAccess.getProcedureDefinitionAccess().getGroup(), "rule__ProcedureDefinition__Group__0");
					put(grammarAccess.getProcedureDefinitionAccess().getGroup_2(), "rule__ProcedureDefinition__Group_2__0");
					put(grammarAccess.getFunctionAccess().getGroup(), "rule__Function__Group__0");
					put(grammarAccess.getFunctionAccess().getGroup_1(), "rule__Function__Group_1__0");
					put(grammarAccess.getFunctionAccess().getGroup_3(), "rule__Function__Group_3__0");
					put(grammarAccess.getParameterSequenceAccess().getGroup(), "rule__ParameterSequence__Group__0");
					put(grammarAccess.getParameterSequenceAccess().getGroup_1(), "rule__ParameterSequence__Group_1__0");
					put(grammarAccess.getParameterDeclarationAccess().getGroup(), "rule__ParameterDeclaration__Group__0");
					put(grammarAccess.getParameterValueAccess().getGroup(), "rule__ParameterValue__Group__0");
					put(grammarAccess.getParameterBehaviorAccess().getGroup_1(), "rule__ParameterBehavior__Group_1__0");
					put(grammarAccess.getParameterBehaviorAccess().getGroup_2(), "rule__ParameterBehavior__Group_2__0");
					put(grammarAccess.getPragmaRestrictReferencesAccess().getGroup(), "rule__PragmaRestrictReferences__Group__0");
					put(grammarAccess.getPragmaRestrictReferencesAccess().getGroup_6(), "rule__PragmaRestrictReferences__Group_6__0");
					put(grammarAccess.getPragmaTimestampAccess().getGroup(), "rule__PragmaTimestamp__Group__0");
					put(grammarAccess.getDataTypeAccess().getGroup_0(), "rule__DataType__Group_0__0");
					put(grammarAccess.getDataTypeAccess().getGroup_0_1(), "rule__DataType__Group_0_1__0");
					put(grammarAccess.getDataTypeAccess().getGroup_0_1_2(), "rule__DataType__Group_0_1_2__0");
					put(grammarAccess.getDataTypeAccess().getGroup_1(), "rule__DataType__Group_1__0");
					put(grammarAccess.getDataTypeAccess().getGroup_1_1(), "rule__DataType__Group_1_1__0");
					put(grammarAccess.getProcedureImplementationAccess().getGroup(), "rule__ProcedureImplementation__Group__0");
					put(grammarAccess.getFunctionImplementationAccess().getGroup(), "rule__FunctionImplementation__Group__0");
					put(grammarAccess.getDeterministicClauseAccess().getGroup(), "rule__DeterministicClause__Group__0");
					put(grammarAccess.getResultCacheClauseAccess().getGroup(), "rule__ResultCacheClause__Group__0");
					put(grammarAccess.getResultCacheClauseAccess().getGroup_2(), "rule__ResultCacheClause__Group_2__0");
					put(grammarAccess.getResultCacheClauseAccess().getGroup_2_2(), "rule__ResultCacheClause__Group_2_2__0");
					put(grammarAccess.getResultCacheClauseAccess().getGroup_2_2_1(), "rule__ResultCacheClause__Group_2_2_1__0");
					put(grammarAccess.getPipelinedClauseAccess().getGroup(), "rule__PipelinedClause__Group__0");
					put(grammarAccess.getStatementBodyAccess().getGroup(), "rule__StatementBody__Group__0");
					put(grammarAccess.getDeclareSectionAccess().getGroup(), "rule__DeclareSection__Group__0");
					put(grammarAccess.getExternalProcedureDeclarationAccess().getGroup(), "rule__ExternalProcedureDeclaration__Group__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup(), "rule__VariableDeclaration__Group__0");
					put(grammarAccess.getNOT_NULLAccess().getGroup(), "rule__NOT_NULL__Group__0");
					put(grammarAccess.getVariableValueAccess().getGroup(), "rule__VariableValue__Group__0");
					put(grammarAccess.getNullLiteralExpressionAccess().getGroup(), "rule__NullLiteralExpression__Group__0");
					put(grammarAccess.getLabelAccess().getGroup(), "rule__Label__Group__0");
					put(grammarAccess.getAssignmentStatementAccess().getGroup(), "rule__AssignmentStatement__Group__0");
					put(grammarAccess.getBlockStatementAccess().getGroup(), "rule__BlockStatement__Group__0");
					put(grammarAccess.getCaseStatementAccess().getGroup(), "rule__CaseStatement__Group__0");
					put(grammarAccess.getCaseStatementWhenBranchAccess().getGroup(), "rule__CaseStatementWhenBranch__Group__0");
					put(grammarAccess.getCaseStatementElseBranchAccess().getGroup(), "rule__CaseStatementElseBranch__Group__0");
					put(grammarAccess.getCloseStatementAccess().getGroup(), "rule__CloseStatement__Group__0");
					put(grammarAccess.getContinueStatementAccess().getGroup(), "rule__ContinueStatement__Group__0");
					put(grammarAccess.getContinueStatementAccess().getGroup_4(), "rule__ContinueStatement__Group_4__0");
					put(grammarAccess.getExitStatementAccess().getGroup(), "rule__ExitStatement__Group__0");
					put(grammarAccess.getExitStatementAccess().getGroup_4(), "rule__ExitStatement__Group_4__0");
					put(grammarAccess.getFetchStatementAccess().getGroup(), "rule__FetchStatement__Group__0");
					put(grammarAccess.getFetchStatementSingleIntoClauseAccess().getGroup(), "rule__FetchStatementSingleIntoClause__Group__0");
					put(grammarAccess.getFetchStatementBulkIntoClauseAccess().getGroup(), "rule__FetchStatementBulkIntoClause__Group__0");
					put(grammarAccess.getFetchStatementBulkIntoClauseAccess().getGroup_4(), "rule__FetchStatementBulkIntoClause__Group_4__0");
					put(grammarAccess.getGotoStatementAccess().getGroup(), "rule__GotoStatement__Group__0");
					put(grammarAccess.getIfStatementAccess().getGroup(), "rule__IfStatement__Group__0");
					put(grammarAccess.getIfStatementElsifBranchAccess().getGroup(), "rule__IfStatementElsifBranch__Group__0");
					put(grammarAccess.getIfStatementElseBranchAccess().getGroup(), "rule__IfStatementElseBranch__Group__0");
					put(grammarAccess.getBasicLoopStatementAccess().getGroup(), "rule__BasicLoopStatement__Group__0");
					put(grammarAccess.getWhileLoopStatementAccess().getGroup(), "rule__WhileLoopStatement__Group__0");
					put(grammarAccess.getForLoopStatementAccess().getGroup(), "rule__ForLoopStatement__Group__0");
					put(grammarAccess.getReturnStatementAccess().getGroup(), "rule__ReturnStatement__Group__0");
					put(grammarAccess.getNullStatementAccess().getGroup(), "rule__NullStatement__Group__0");
					put(grammarAccess.getRaiseStatementAccess().getGroup(), "rule__RaiseStatement__Group__0");
					put(grammarAccess.getVariableRefAccess().getGroup(), "rule__VariableRef__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getProcedureAccess().getSchemaNameAssignment_1_0(), "rule__Procedure__SchemaNameAssignment_1_0");
					put(grammarAccess.getProcedureAccess().getNameAssignment_2(), "rule__Procedure__NameAssignment_2");
					put(grammarAccess.getProcedureAccess().getParametersAssignment_3_1(), "rule__Procedure__ParametersAssignment_3_1");
					put(grammarAccess.getProcedureAccess().getInvokerRightsAssignment_4(), "rule__Procedure__InvokerRightsAssignment_4");
					put(grammarAccess.getProcedureAccess().getContentAssignment_6(), "rule__Procedure__ContentAssignment_6");
					put(grammarAccess.getPackageAccess().getSchemaNameAssignment_1_0(), "rule__Package__SchemaNameAssignment_1_0");
					put(grammarAccess.getPackageAccess().getNameAssignment_2(), "rule__Package__NameAssignment_2");
					put(grammarAccess.getPackageAccess().getInvokerRightsAssignment_3(), "rule__Package__InvokerRightsAssignment_3");
					put(grammarAccess.getPackageAccess().getItemsAssignment_5(), "rule__Package__ItemsAssignment_5");
					put(grammarAccess.getPackageAccess().getEndNameAssignment_7(), "rule__Package__EndNameAssignment_7");
					put(grammarAccess.getProcedureDeclarationAccess().getNameAssignment_1(), "rule__ProcedureDeclaration__NameAssignment_1");
					put(grammarAccess.getProcedureDeclarationAccess().getParametersAssignment_2_1(), "rule__ProcedureDeclaration__ParametersAssignment_2_1");
					put(grammarAccess.getProcedureDefinitionAccess().getNameAssignment_1(), "rule__ProcedureDefinition__NameAssignment_1");
					put(grammarAccess.getProcedureDefinitionAccess().getParametersAssignment_2_1(), "rule__ProcedureDefinition__ParametersAssignment_2_1");
					put(grammarAccess.getProcedureDefinitionAccess().getImplementationAssignment_4(), "rule__ProcedureDefinition__ImplementationAssignment_4");
					put(grammarAccess.getFunctionAccess().getSchemaNameAssignment_1_0(), "rule__Function__SchemaNameAssignment_1_0");
					put(grammarAccess.getFunctionAccess().getNameAssignment_2(), "rule__Function__NameAssignment_2");
					put(grammarAccess.getFunctionAccess().getParametersAssignment_3_1(), "rule__Function__ParametersAssignment_3_1");
					put(grammarAccess.getFunctionAccess().getReturnTypeAssignment_5(), "rule__Function__ReturnTypeAssignment_5");
					put(grammarAccess.getFunctionAccess().getFunctionClausesAssignment_6(), "rule__Function__FunctionClausesAssignment_6");
					put(grammarAccess.getFunctionAccess().getContentAssignment_8(), "rule__Function__ContentAssignment_8");
					put(grammarAccess.getParameterSequenceAccess().getParametersAssignment_0(), "rule__ParameterSequence__ParametersAssignment_0");
					put(grammarAccess.getParameterSequenceAccess().getParametersAssignment_1_1(), "rule__ParameterSequence__ParametersAssignment_1_1");
					put(grammarAccess.getParameterDeclarationAccess().getNameAssignment_0(), "rule__ParameterDeclaration__NameAssignment_0");
					put(grammarAccess.getParameterDeclarationAccess().getBehaviorAssignment_1(), "rule__ParameterDeclaration__BehaviorAssignment_1");
					put(grammarAccess.getParameterDeclarationAccess().getDataTypeAssignment_2(), "rule__ParameterDeclaration__DataTypeAssignment_2");
					put(grammarAccess.getParameterDeclarationAccess().getValueAssignment_3(), "rule__ParameterDeclaration__ValueAssignment_3");
					put(grammarAccess.getParameterValueAccess().getExpressionAssignment_1(), "rule__ParameterValue__ExpressionAssignment_1");
					put(grammarAccess.getProcedureInvokerRightsClauseAccess().getRightAssignment(), "rule__ProcedureInvokerRightsClause__RightAssignment");
					put(grammarAccess.getFunctionInvokerRightsClauseAccess().getRightAssignment(), "rule__FunctionInvokerRightsClause__RightAssignment");
					put(grammarAccess.getPragmaRestrictReferencesAccess().getRestrictionsAssignment_5(), "rule__PragmaRestrictReferences__RestrictionsAssignment_5");
					put(grammarAccess.getPragmaRestrictReferencesAccess().getRestrictionsAssignment_6_1(), "rule__PragmaRestrictReferences__RestrictionsAssignment_6_1");
					put(grammarAccess.getPragmaTimestampAccess().getTimestampAssignment_3(), "rule__PragmaTimestamp__TimestampAssignment_3");
					put(grammarAccess.getProcedureImplementationAccess().getDeclareSectionAssignment_0(), "rule__ProcedureImplementation__DeclareSectionAssignment_0");
					put(grammarAccess.getProcedureImplementationAccess().getBodyAssignment_1(), "rule__ProcedureImplementation__BodyAssignment_1");
					put(grammarAccess.getFunctionImplementationAccess().getDeclareSectionAssignment_0(), "rule__FunctionImplementation__DeclareSectionAssignment_0");
					put(grammarAccess.getFunctionImplementationAccess().getBodyAssignment_1(), "rule__FunctionImplementation__BodyAssignment_1");
					put(grammarAccess.getResultCacheClauseAccess().getDataSourcesAssignment_2_2_0(), "rule__ResultCacheClause__DataSourcesAssignment_2_2_0");
					put(grammarAccess.getResultCacheClauseAccess().getDataSourcesAssignment_2_2_1_1(), "rule__ResultCacheClause__DataSourcesAssignment_2_2_1_1");
					put(grammarAccess.getStatementBodyAccess().getStatementsAssignment_1(), "rule__StatementBody__StatementsAssignment_1");
					put(grammarAccess.getStatementBodyAccess().getEndNameAssignment_3(), "rule__StatementBody__EndNameAssignment_3");
					put(grammarAccess.getDeclareSectionAccess().getItemsAssignment_1(), "rule__DeclareSection__ItemsAssignment_1");
					put(grammarAccess.getVariableDeclarationAccess().getNameAssignment_0(), "rule__VariableDeclaration__NameAssignment_0");
					put(grammarAccess.getVariableDeclarationAccess().getIsConstantAssignment_1(), "rule__VariableDeclaration__IsConstantAssignment_1");
					put(grammarAccess.getVariableDeclarationAccess().getDataTypeAssignment_2(), "rule__VariableDeclaration__DataTypeAssignment_2");
					put(grammarAccess.getVariableDeclarationAccess().getIsNotNullAssignment_3(), "rule__VariableDeclaration__IsNotNullAssignment_3");
					put(grammarAccess.getVariableDeclarationAccess().getValueAssignment_4(), "rule__VariableDeclaration__ValueAssignment_4");
					put(grammarAccess.getVariableValueAccess().getExpressionAssignment_1(), "rule__VariableValue__ExpressionAssignment_1");
					put(grammarAccess.getIntLiteralExpressionAccess().getValueAssignment(), "rule__IntLiteralExpression__ValueAssignment");
					put(grammarAccess.getStringLiteralExpressionAccess().getValueAssignment(), "rule__StringLiteralExpression__ValueAssignment");
					put(grammarAccess.getBooleanLiteralExpressionAccess().getValueAssignment(), "rule__BooleanLiteralExpression__ValueAssignment");
					put(grammarAccess.getVariableRefExpressionAccess().getVariableAssignment(), "rule__VariableRefExpression__VariableAssignment");
					put(grammarAccess.getLabelAccess().getNameAssignment_1(), "rule__Label__NameAssignment_1");
					put(grammarAccess.getAssignmentStatementAccess().getLabelsAssignment_0(), "rule__AssignmentStatement__LabelsAssignment_0");
					put(grammarAccess.getAssignmentStatementAccess().getTargetAssignment_1(), "rule__AssignmentStatement__TargetAssignment_1");
					put(grammarAccess.getAssignmentStatementAccess().getExpressionAssignment_3(), "rule__AssignmentStatement__ExpressionAssignment_3");
					put(grammarAccess.getVariableAssignmentTargetAccess().getVariableAssignment(), "rule__VariableAssignmentTarget__VariableAssignment");
					put(grammarAccess.getBlockStatementAccess().getLabelsAssignment_0(), "rule__BlockStatement__LabelsAssignment_0");
					put(grammarAccess.getBlockStatementAccess().getDeclareSectionAssignment_1(), "rule__BlockStatement__DeclareSectionAssignment_1");
					put(grammarAccess.getBlockStatementAccess().getBodyAssignment_2(), "rule__BlockStatement__BodyAssignment_2");
					put(grammarAccess.getCaseStatementAccess().getLabelsAssignment_0(), "rule__CaseStatement__LabelsAssignment_0");
					put(grammarAccess.getCaseStatementAccess().getExpressionAssignment_2(), "rule__CaseStatement__ExpressionAssignment_2");
					put(grammarAccess.getCaseStatementAccess().getWhenBranchesAssignment_3(), "rule__CaseStatement__WhenBranchesAssignment_3");
					put(grammarAccess.getCaseStatementAccess().getElseBranchAssignment_4(), "rule__CaseStatement__ElseBranchAssignment_4");
					put(grammarAccess.getCaseStatementAccess().getEndLabelAssignment_7(), "rule__CaseStatement__EndLabelAssignment_7");
					put(grammarAccess.getCaseStatementWhenBranchAccess().getExpressionAssignment_1(), "rule__CaseStatementWhenBranch__ExpressionAssignment_1");
					put(grammarAccess.getCaseStatementWhenBranchAccess().getStatementsAssignment_3(), "rule__CaseStatementWhenBranch__StatementsAssignment_3");
					put(grammarAccess.getCaseStatementElseBranchAccess().getStatementsAssignment_1(), "rule__CaseStatementElseBranch__StatementsAssignment_1");
					put(grammarAccess.getCloseStatementAccess().getLabelsAssignment_0(), "rule__CloseStatement__LabelsAssignment_0");
					put(grammarAccess.getCloseStatementAccess().getCursorAssignment_2(), "rule__CloseStatement__CursorAssignment_2");
					put(grammarAccess.getContinueStatementAccess().getLabelsAssignment_1(), "rule__ContinueStatement__LabelsAssignment_1");
					put(grammarAccess.getContinueStatementAccess().getLabelNameAssignment_3(), "rule__ContinueStatement__LabelNameAssignment_3");
					put(grammarAccess.getContinueStatementAccess().getWhenExpressionAssignment_4_1(), "rule__ContinueStatement__WhenExpressionAssignment_4_1");
					put(grammarAccess.getExitStatementAccess().getLabelsAssignment_1(), "rule__ExitStatement__LabelsAssignment_1");
					put(grammarAccess.getExitStatementAccess().getLabelNameAssignment_3(), "rule__ExitStatement__LabelNameAssignment_3");
					put(grammarAccess.getExitStatementAccess().getWhenExpressionAssignment_4_1(), "rule__ExitStatement__WhenExpressionAssignment_4_1");
					put(grammarAccess.getFetchStatementAccess().getLabelsAssignment_0(), "rule__FetchStatement__LabelsAssignment_0");
					put(grammarAccess.getFetchStatementAccess().getCursorAssignment_2(), "rule__FetchStatement__CursorAssignment_2");
					put(grammarAccess.getFetchStatementAccess().getIntoClauseAssignment_3(), "rule__FetchStatement__IntoClauseAssignment_3");
					put(grammarAccess.getFetchStatementSingleIntoClauseAccess().getTargetVariablesAssignment_1(), "rule__FetchStatementSingleIntoClause__TargetVariablesAssignment_1");
					put(grammarAccess.getFetchStatementBulkIntoClauseAccess().getTargetVariablesAssignment_3(), "rule__FetchStatementBulkIntoClause__TargetVariablesAssignment_3");
					put(grammarAccess.getFetchStatementBulkIntoClauseAccess().getLimitExpressionAssignment_4_1(), "rule__FetchStatementBulkIntoClause__LimitExpressionAssignment_4_1");
					put(grammarAccess.getGotoStatementAccess().getLabelsAssignment_0(), "rule__GotoStatement__LabelsAssignment_0");
					put(grammarAccess.getGotoStatementAccess().getLabelNameAssignment_2(), "rule__GotoStatement__LabelNameAssignment_2");
					put(grammarAccess.getIfStatementAccess().getLabelsAssignment_0(), "rule__IfStatement__LabelsAssignment_0");
					put(grammarAccess.getIfStatementAccess().getExpressionAssignment_2(), "rule__IfStatement__ExpressionAssignment_2");
					put(grammarAccess.getIfStatementAccess().getStatementsAssignment_4(), "rule__IfStatement__StatementsAssignment_4");
					put(grammarAccess.getIfStatementAccess().getElsifBranchesAssignment_5(), "rule__IfStatement__ElsifBranchesAssignment_5");
					put(grammarAccess.getIfStatementAccess().getElseBranchAssignment_6(), "rule__IfStatement__ElseBranchAssignment_6");
					put(grammarAccess.getIfStatementElsifBranchAccess().getExpressionAssignment_1(), "rule__IfStatementElsifBranch__ExpressionAssignment_1");
					put(grammarAccess.getIfStatementElsifBranchAccess().getStatementsAssignment_3(), "rule__IfStatementElsifBranch__StatementsAssignment_3");
					put(grammarAccess.getIfStatementElseBranchAccess().getStatementsAssignment_1(), "rule__IfStatementElseBranch__StatementsAssignment_1");
					put(grammarAccess.getBasicLoopStatementAccess().getLabelsAssignment_0(), "rule__BasicLoopStatement__LabelsAssignment_0");
					put(grammarAccess.getBasicLoopStatementAccess().getStatementsAssignment_2(), "rule__BasicLoopStatement__StatementsAssignment_2");
					put(grammarAccess.getBasicLoopStatementAccess().getEndLabelAssignment_5(), "rule__BasicLoopStatement__EndLabelAssignment_5");
					put(grammarAccess.getWhileLoopStatementAccess().getLabelsAssignment_0(), "rule__WhileLoopStatement__LabelsAssignment_0");
					put(grammarAccess.getWhileLoopStatementAccess().getExpressionAssignment_2(), "rule__WhileLoopStatement__ExpressionAssignment_2");
					put(grammarAccess.getWhileLoopStatementAccess().getStatementsAssignment_4(), "rule__WhileLoopStatement__StatementsAssignment_4");
					put(grammarAccess.getWhileLoopStatementAccess().getEndLabelAssignment_7(), "rule__WhileLoopStatement__EndLabelAssignment_7");
					put(grammarAccess.getForLoopStatementAccess().getLabelsAssignment_0(), "rule__ForLoopStatement__LabelsAssignment_0");
					put(grammarAccess.getForLoopStatementAccess().getIndexVariableAssignment_2(), "rule__ForLoopStatement__IndexVariableAssignment_2");
					put(grammarAccess.getForLoopStatementAccess().getLowerBoundAssignment_5(), "rule__ForLoopStatement__LowerBoundAssignment_5");
					put(grammarAccess.getForLoopStatementAccess().getUpperBoundAssignment_7(), "rule__ForLoopStatement__UpperBoundAssignment_7");
					put(grammarAccess.getForLoopStatementAccess().getStatementsAssignment_9(), "rule__ForLoopStatement__StatementsAssignment_9");
					put(grammarAccess.getForLoopStatementAccess().getEndLabelAssignment_12(), "rule__ForLoopStatement__EndLabelAssignment_12");
					put(grammarAccess.getReturnStatementAccess().getLabelsAssignment_1(), "rule__ReturnStatement__LabelsAssignment_1");
					put(grammarAccess.getReturnStatementAccess().getExpressionAssignment_3(), "rule__ReturnStatement__ExpressionAssignment_3");
					put(grammarAccess.getNullStatementAccess().getLabelsAssignment_1(), "rule__NullStatement__LabelsAssignment_1");
					put(grammarAccess.getRaiseStatementAccess().getLabelsAssignment_1(), "rule__RaiseStatement__LabelsAssignment_1");
					put(grammarAccess.getRaiseStatementAccess().getExceptionNameAssignment_3(), "rule__RaiseStatement__ExceptionNameAssignment_3");
					put(grammarAccess.getVariableRefAccess().getIsHostRefAssignment_0(), "rule__VariableRef__IsHostRefAssignment_0");
					put(grammarAccess.getVariableRefAccess().getNameAssignment_1(), "rule__VariableRef__NameAssignment_1");
					put(grammarAccess.getQualifiedNameAccess().getNamesAssignment_0(), "rule__QualifiedName__NamesAssignment_0");
					put(grammarAccess.getQualifiedNameAccess().getNamesAssignment_1_1(), "rule__QualifiedName__NamesAssignment_1_1");
					put(grammarAccess.getNameAccess().getDeclarationAssignment(), "rule__Name__DeclarationAssignment");
					put(grammarAccess.getLoopVariableDeclarationAccess().getNameAssignment(), "rule__LoopVariableDeclaration__NameAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			plsql.editor.xtext.ui.contentassist.antlr.internal.InternalPlSqlParser typedParser = (plsql.editor.xtext.ui.contentassist.antlr.internal.InternalPlSqlParser) parser;
			typedParser.entryRuleCompilationUnit();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public PlSqlGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(PlSqlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
